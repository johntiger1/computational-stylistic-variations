#!/bin/bash

### Software bits ###

# The root directory of this project.
root_dir=/absolute/path/to/computational-stylistic-variations

# Formality model evaluation requires Moses scripts.
# See: https://github.com/moses-smt/mosesdecoder/tree/master/scripts
moses_scripts_dir=/absolute/path/to/scripts

# Building vector space models requires some NLP utils.
# See: https://github.com/xingniu/nlp-util
nlp_util=/absolute/path/to/nlp-util

# Building vector space models requires Word2vec binary.
# See: https://code.google.com/archive/p/word2vec/
word2vec=/absolute/path/to/word2vec/word2vec

### Corpora pointers ###

# Formality modeling requires an English monolingual corpus for building vector space models.
# Set $spinn3r if recommended "ICWSM 2009 Spinn3r Blog Dataset" is used.
# Set $user_corpus if a customized corpus is provided.
mono_corpus=user # spinn3r/user

# "ICWSM 2009 Spinn3r Blog Dataset"
# See: http://www.icwsm.org/data/
spinn3r=/absolute/path/to/BLOGS-tiergroup-1.tar.gz

# User-provided monolingual corpus
user_corpus=/absolute/path/to/corpus
# Set $user_corpus_prep to yes if user-provided corpus is not preprocessed (tokenization and lowercasing).
user_corpus_prep=no # yes/no

# User-provided VSM
# It can be
# - a pre-trained word2vec model, or
# - a pre-trained LSA model (gensim.models.LsiModel), or
# - a dictionary-like object serialized by pickle:
#   { "vsm": an array-like 2-dimensional object with shape=(|tokens|,vsm_dimension),
#     "map": a token to index dictionary }
# Set $use_user_vsm to 'True' when using user-provided VSM.
# Set $vsm_type to corresponding type.
user_vsm=/absolute/path/to/vsm/model
use_user_vsm=False # True/False

# User-provided VSM subspace projections in .npy format
# - an array-like 2-dimensional object with shape=(subspace_dimension, vsm_dimension)
# - path without suffix .npy (it will be added automatically)
# Set $subspace_train to 'user' when using user-provided VSM subspace projections.
user_subspace=/absolute/path/to/vsm/subspace

### Experiment naming variables ###

# The root of the working directory.
exp_root_dir=/absolute/path/to/working/directory

### Experiment parameters ###

# Vector space model type (word2vec, LSA or pickle)
vsm_type=w2v # w2v/lsa/pickle

# Vector space model dimension (for non-user-provided models)
vsm_dimension=300

# Learning method
# - PCA, SVM
#   Ref: Xing Niu, Marianna Martindale, and Marine Carpuat. "A Study of Style in Machine Translation: Controlling the Formality of Machine Translation Output". EMNLP 2017.
# - SimDiff
#   Ref: Julian Brooke, Tong Wang, and Graeme Hirst. "Automatic acquisition of lexical formality". COLING 2010.
learning_method=SVM

# Sentence scoring scheme (mean average or weighted average)
sentence_scoring=weighted # mean/weighted

# Debiasing scores (forcing neutral words to get zero score)
debiasing=True # True/False

# Use stylistic subspaces
# Ref: Xing Niu and Marine Carpuat. "Discovering Stylistic Variations in Distributional Vector Space Models via Lexical Paraphrases". Workshop on Stylistic Variation at EMNLP 2017.
use_subspace=True # True/False

# Subspace dimension (for non-user-provided models)
subspace_dimension=20

# Subspace training type (PPDB paraphrases, polar seeds or user-provided)
subspace_train=ppdb # ppdb/seed/user